name: 自动同步模块库

on:
  schedule:
    # 每天凌晨2点执行 (UTC时间，北京时间10点)
    - cron: '0 2 * * *'
  workflow_dispatch:
    # 支持手动触发

jobs:
  sync-repositories:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: 设置Git配置
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    
    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y jq rsync
    
    - name: 设置脚本权限
      run: chmod +x scripts/update.sh
    
    - name: 执行更新
      run: |
        bash scripts/update.sh
    
    - name: 检查是否有更改
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi
    
    - name: 提交更改
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        NEW_VERSION=$(cat package.json | jq -r '.version')
        git add .
        git commit -m "🤖 自动更新模块库 v$NEW_VERSION
        
        - 更新时间: $(date '+%Y-%m-%d %H:%M:%S')
        - 触发方式: 定时任务
        - 版本号: v$NEW_VERSION"
        git push
    
    - name: 创建Release标签
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        NEW_VERSION=$(cat package.json | jq -r '.version')
        git tag -a "v$NEW_VERSION" -m "自动更新 v$NEW_VERSION"
        git push origin "v$NEW_VERSION"
    
    - name: 输出结果
      run: |
        if [ "${{ steps.check-changes.outputs.has_changes }}" == "true" ]; then
          echo "✅ 更新完成并已提交"
          NEW_VERSION=$(cat package.json | jq -r '.version')
          echo "📦 新版本: v$NEW_VERSION"
        else
          echo "ℹ️ 没有发现更新"
        fi